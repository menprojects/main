3-3-2020

The purpose is to run docker ubuntu under Windows or Mac.
I did not include how to do it in Linux, what's the point?
We want windows and Mac to use MySQL running under the docker ubuntu image. 


Windows
1. Install : https://docs.docker.com/docker-for-windows/install/
2. docker pull ubuntu # download image
3. mkdir -p docker\my_ubuntu\mount 
  # create ubuntu container from image 
4. docker create --mount type=bind,source=/Users/mark/docker/my_ubuntu/mount,target=/mysql  -p 3306:3306 -it --name my_ubuntu ubuntu
5. docker create --mount type=bind,source=c:\Users\mark\docker\my_ubuntu\mount,target=/mysql -p 3306:3306 -it --name my_ubuntu ubuntu
  # start the container
6. docker start my_ubuntu 
  # login to the container
7. docker exec -it my_ubuntu /bin/bash 

Mac
1. Install docker
2. register to download images
3. Follow the commands which
   a. downloads the image
   b. runs into a container
   c. connects to the container
   d. runs linux commands to get packages and stuff

1. docker pull ubuntu # download image
2. mkdir -p /Users/mnielsen/docker/my_ubuntu/mount 
  # create ubuntu container from image 
3. docker create --mount type=bind,source=/Users/mnielsen/docker/my_ubuntu/mount,target=/mysql -p 3306:3306 -it --name my_ubuntu ubuntu
  # start the container
4. docker start -D my_ubuntu 
  # login to the container
5. docker exec -it my_ubuntu /bin/bash 


Ubuntu commands


apt-get update
apt-get install emacs lsb-core wget sudo python-mysqldb openssh-server
####### put int ap-tget command for percona 5.6
wget https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb
sudo dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb
sudo apt-get update
sudo apt-get install percona-server-server-5.7

# decide a root password that is simple
# you will have to enter it twice
# This mysql will only be available through localhost without further work
service mysql start
mysql -u root -p # it will ask for the password
sudo apt-get install python-mysqldb


Other issues

List options:
  command line: docker -h 
  webpage:
Restart Docker:
  cli: killall Docker && open /Applications/Docker.app
  GUI: the program  can be restarted on the running icon at the top of the desktop. 
List Images installed : docker images -a 
List Containers installed : docker ps
Restart container: docker restart container
  connect to mysql to localhost : docker restart container
Reconnect to a container
  docker exec -it <Container> /bin/bash
webpage If you change things like mount, volumes, port forwarding and or stuff outside of the container:
  For some things you can edit the configuration files, like opening ports,
  Try to use mounts instead of volumes, is seems to be more flexible than volumes. 
  Remake and image
    docker commit my_ubuntu NEW_IMAGE
    docker create --mount type=bind,source=/Users/mnielsen/docker/my_ubuntu/mount,target=/mysql \
-p 3306:3306 -it --name my_ubuntu2 NEW_IMAGE
    OR
    docker commit my_ubuntu u1
    docker commit my_ubuntu u2
    mkdir -p /Users/mnielsen/docker/u1/mount
    mkdir -p /Users/mnielsen/docker/u2/mount
    docker create --mount type=bind,source=/Users/mnielsen/docker/u1/mount,target=/mysql -p 3306:3306 -it --name U1 u1
    docker create --mount type=bind,source=/Users/mnielsen/docker/u2/mount,target=/mysql -p 3307:3306 -it --name U2 u2

Problems with mysql
  wipe out /var/lib/mysql /var/log/mysql/error.log
  mysql --initialize
     look for password in /var/log/mysql/error.log
  update password = password('root');
  CREATE USER 'root'@'%' IDENTIFIED BY 'root';
  grant all privileges on *.* to root@'%';
